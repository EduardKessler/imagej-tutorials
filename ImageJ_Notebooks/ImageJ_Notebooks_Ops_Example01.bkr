{
    "beaker": "2",
    "evaluators": [
        {
            "name": "HTML",
            "plugin": "HTML",
            "view": {
                "cm": {
                    "mode": "htmlmixed"
                }
            }
        },
        {
            "name": "TeX",
            "plugin": "TeX",
            "view": {
                "cm": {
                    "mode": "stex"
                }
            }
        },
        {
            "name": "IPython",
            "plugin": "IPython",
            "imports": "",
            "supplementalClassPath": "",
            "view": {
                "cm": {
                    "mode": "python"
                }
            },
            "setup": "%matplotlib inline\nimport numpy\nimport matplotlib\nfrom matplotlib import pylab, mlab, pyplot\nnp = numpy\nplt = pyplot\nfrom IPython.display import display\nfrom IPython.core.pylabtools import figsize, getfigs\nfrom pylab import *\nfrom numpy import *\n"
        },
        {
            "name": "JavaScript",
            "plugin": "JavaScript",
            "jsSetting2": "",
            "jsSetting1": "",
            "view": {
                "cm": {
                    "mode": "javascript",
                    "background": "#FFE0F0"
                }
            },
            "languageVersion": "ES2015"
        },
        {
            "name": "R",
            "plugin": "R",
            "view": {
                "cm": {
                    "mode": "r"
                }
            }
        },
        {
            "name": "Groovy",
            "plugin": "Groovy",
            "imports": "graxxia.*\ncom.twosigma.beaker.NamespaceClient\ncom.twosigma.beaker.BeakerProgressUpdate\ncom.twosigma.beaker.chart.Color\ncom.twosigma.beaker.chart.GradientColor\ncom.twosigma.beaker.chart.legend.*\ncom.twosigma.beaker.chart.Filter\ncom.twosigma.beaker.chart.xychart.*\ncom.twosigma.beaker.chart.xychart.plotitem.*\ncom.twosigma.beaker.chart.categoryplot.*\ncom.twosigma.beaker.chart.categoryplot.plotitem.*\ncom.twosigma.beaker.chart.histogram.*\ncom.twosigma.beaker.chart.treemap.*\ncom.twosigma.beaker.chart.treemap.util.*\nnet.sf.jtreemap.swing.*\ncom.twosigma.beaker.chart.heatmap.HeatMap\ncom.twosigma.beaker.chart.KeyboardCodes\ncom.twosigma.beaker.jvm.object.*\ncom.twosigma.beaker.easyform.*\ncom.twosigma.beaker.easyform.formitem.*",
            "view": {
                "cm": {
                    "mode": "groovy"
                }
            }
        }
    ],
    "cells": [
        {
            "id": "section001",
            "type": "section",
            "level": 1,
            "title": "ImageJ Ops\n\nExample 01: Using Ops",
            "collapsed": false,
            "evaluatorReader": false
        },
        {
            "id": "sectiondWXqiA",
            "type": "section",
            "title": "Introduction",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "markdown9dHd5C",
            "type": "markdown",
            "body": [
                "[ImageJ Ops](http://imagej.net/ImageJ_Ops) is a framework for reusable image processing operations. Ops extends Java's mantra of \"write once, run anywhere\" to image processing algorithms.",
                "The central goal is to enable programmers to code an image processing algorithm in the Ops framework, which is then usable as-is from any SciJava-compatible software project, ",
                "such as [ImageJ](http://imagej.net/ImageJ), [CellProfiler](http://imagej.net/CellProfiler), [KNIME](http://imagej.net/KNIME), [OMERO](http://imagej.net/OMERO) and [Alida](http://imagej.net/Alida).",
                "",
                "This example is an introduction of ImageJ Ops usage, and it illustrates various ops usage like math op, image op, and different services usage like **CommandService**, **LogService** and **OpService**. "
            ],
            "evaluatorReader": false
        },
        {
            "id": "section8LHMGc",
            "type": "section",
            "title": "Bootstrap ImageJ",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeGB53Md",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "/////////////////////////////////////////////////////////////////",
                    "// Bootstrap ImageJ. This may take some minutes the first time,",
                    "// but will be fast on subsequent runs on the same computer.",
                    "@GrabResolver(name='imagej', root='http://maven.imagej.net/content/groups/public/')",
                    "@Grab(group='net.imagej', module='imagej', version='2.0.0-rc-50')",
                    "import net.imagej.ImageJ",
                    "/////////////////////////////////////////////////////////////////",
                    "",
                    "///////////////////////////////////////////////////////////////////////////////",
                    "// Define an object which houses some handy notebook functions. In particular,",
                    "// we include a way to display ImgLib images (i.e., RandomAccessibleInterval",
                    "// objects) directly inside the notebook here.",
                    "",
                    "import java.awt.image.BufferedImage",
                    "import net.imagej.display.ColorTables",
                    "import net.imglib2.RandomAccessibleInterval",
                    "import net.imglib2.converter.RealLUTConverter",
                    "import net.imglib2.display.projector.composite.CompositeXYProjector",
                    "import net.imglib2.display.screenimage.awt.ARGBScreenImage",
                    "import net.imglib2.view.Views",
                    "",
                    "notebook = new Object() {",
                    "  BufferedImage display(RandomAccessibleInterval source, double min = 0.0, double max = 255.0) {",
                    "    return display(source, 0, 1, -1, min, max)",
                    "  }",
                    "  BufferedImage display(RandomAccessibleInterval source, int xAxis, int yAxis, int cAxis, double min, double max) {",
                    "    offset = new long[source.numDimensions()]",
                    "    for (int d = 0; d < offset.length; d++) {",
                    "     offset[d] = -source.min(d) ",
                    "    }",
                    "    image = Views.translate(source, offset)",
                    "    ",
                    "    w = (int) image.dimension(xAxis)",
                    "    h = (int) image.dimension(yAxis)",
                    "    c = 1",
                    "    target = new ARGBScreenImage(w, h)",
                    "    converters = new ArrayList<RealLUTConverter>(c)",
                    "    for (int i=0; i<c; i++) {",
                    "      converters.add(new RealLUTConverter(min, max, ColorTables.GRAYS))",
                    "    }",
                    "    proj = new CompositeXYProjector(image, target, converters, cAxis)",
                    "    proj.map()",
                    "    return target.image()",
                    "  }",
                    "}"
                ]
            },
            "output": {
                "state": {},
                "result": "script14792166683721184362112$1@25ee8761",
                "selectedType": "Text",
                "pluginName": "Groovy",
                "shellId": "f59451a4-0583-4653-a649-16a56e5ddc19",
                "elapsedTime": 1808,
                "height": 56
            },
            "evaluatorReader": true,
            "lineCount": 45
        },
        {
            "id": "sectionypvq97",
            "type": "section",
            "title": "Implementation",
            "level": 2,
            "evaluatorReader": false,
            "collapsed": false
        },
        {
            "id": "codeTMpYOB",
            "type": "code",
            "evaluator": "Groovy",
            "input": {
                "body": [
                    "import net.imagej.ImageJ",
                    "import net.imagej.ops.Op",
                    "import net.imglib2.type.numeric.real.DoubleType",
                    "import net.imglib2.IterableInterval",
                    "import net.imglib2.img.ImgFactory",
                    "",
                    "ij = new ImageJ()",
                    "",
                    "ij.log().info(\"-------- How many ops? --------\")",
                    "opCount = ij.command().getCommandsOfType(Op.class).size()",
                    "ij.log().info(\"Found \" + opCount + \" ops\")",
                    "",
                    "ij.log().info(\"-------- Learn about an op --------\")",
                    "ij.log().info(ij.op().help(\"math.mul\"))",
                    "",
                    "ij.log().info(\"-------- Add two numbers --------\")",
                    "seven = ij.op().math().add(2, 5)",
                    "ij.log().info(\"What is 2 + 5? \" + seven)",
                    "",
                    "ij.log().info(\"-------- Create a new blank image --------\")",
                    "long[] dims = [150, 100]",
                    "blank = ij.op().create().img(dims)",
                    "",
                    "ij.log().info(\"-------- Fill in an image with a formula --------\")",
                    "formula = \"10 * (Math.cos(0.3*p[0]) + Math.sin(0.3*p[1]))\"",
                    "sinusoid = ij.op().image().equation(blank, formula)",
                    "",
                    "ij.log().info(\"-------- Add a constant value to an image --------\")",
                    "ij.op().math().add(sinusoid, 13.0)",
                    "",
                    "ij.log().info(\"-------- Generate gradient image using a formula --------\")",
                    "gBlank = ij.op().create().img(dims)",
                    "gradient = ij.op().image().equation(gBlank, \"p[0]+p[1]\")",
                    "",
                    "ij.log().info(\"-------- Add two images --------\")",
                    "composite = ij.op().math().add(sinusoid as IterableInterval, gradient as IterableInterval)",
                    "",
                    "ij.log().info(\"-------- Dump an image to the console --------\")",
                    "ascii = ij.op().image().ascii(composite)",
                    "ij.log().info(\"Composite image:\\n\" + ascii)",
                    "",
                    "ij.log().info(\"-------- Show the image in a window --------\")",
                    "if (ij.ui().getDefaultUI()) {",
                    "  ij.ui().show(\"composite\", composite)",
                    "} else {",
                    "  ij.log().info(\"No UI available!\")",
                    "}",
                    "",
                    "ij.log().info(\"-------- Execute op on every pixel of an image --------\")",
                    "output = composite.factory().create(composite, composite.firstElement());",
                    "Op addOp = ij.op().op(\"math.add\", DoubleType.class, new DoubleType(5.0))",
                    "ij.op().map(output, composite, addOp)",
                    "",
                    "ij.log().info(\"-------- All done! --------\")"
                ]
            },
            "output": {
                "state": {},
                "result": {
                    "type": "Results",
                    "outputdata": [
                        {
                            "type": "err",
                            "value": "[INFO] -------- How many ops? --------\n[INFO] Found 770 ops\n[INFO] -------- Learn about an op --------\n[INFO] Available operations:\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyByte(\n\t\tArrayImg arg,\n\t\tbyte value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyDouble(\n\t\tArrayImg arg,\n\t\tdouble value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyFloat(\n\t\tArrayImg arg,\n\t\tfloat value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyInt(\n\t\tArrayImg arg,\n\t\tint value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyLong(\n\t\tArrayImg arg,\n\t\tlong value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyShort(\n\t\tArrayImg arg,\n\t\tshort value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyUnsignedByte(\n\t\tArrayImg arg,\n\t\tbyte value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyUnsignedInt(\n\t\tArrayImg arg,\n\t\tint value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyUnsignedLong(\n\t\tArrayImg arg,\n\t\tlong value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImageP$MultiplyUnsignedShort(\n\t\tArrayImg arg,\n\t\tshort value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyByte(\n\t\tArrayImg arg,\n\t\tbyte value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyDouble(\n\t\tArrayImg arg,\n\t\tdouble value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyFloat(\n\t\tArrayImg arg,\n\t\tfloat value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyInt(\n\t\tArrayImg arg,\n\t\tint value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyLong(\n\t\tArrayImg arg,\n\t\tlong value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyShort(\n\t\tArrayImg arg,\n\t\tshort value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyUnsignedByte(\n\t\tArrayImg arg,\n\t\tbyte value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyUnsignedInt(\n\t\tArrayImg arg,\n\t\tint value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyUnsignedLong(\n\t\tArrayImg arg,\n\t\tlong value)\n\t(ArrayImg arg) =\n\tnet.imagej.ops.math.ConstantToArrayImage$MultiplyUnsignedShort(\n\t\tArrayImg arg,\n\t\tshort value)\n\t(IterableInterval out?) =\n\tnet.imagej.ops.math.IIToIIOutputII$Multiply(\n\t\tIterableInterval out?,\n\t\tIterableInterval in1,\n\t\tIterableInterval in2)\n\t(NumericType out?) =\n\tnet.imagej.ops.math.NumericTypeBinaryMath$Multiply(\n\t\tNumericType out?,\n\t\tNumericType in1,\n\t\tNumericType in2)\n\t(int result) =\n\tnet.imagej.ops.math.PrimitiveMath$IntegerMultiply(\n\t\tint a,\n\t\tint b)\n\t(long result) =\n\tnet.imagej.ops.math.PrimitiveMath$LongMultiply(\n\t\tlong a,\n\t\tlong b)\n\t(float result) =\n\tnet.imagej.ops.math.PrimitiveMath$FloatMultiply(\n\t\tfloat a,\n\t\tfloat b)\n\t(double result) =\n\tnet.imagej.ops.math.PrimitiveMath$DoubleMultiply(\n\t\tdouble a,\n\t\tdouble b)\n\t(RealType out) =\n\tnet.imagej.ops.math.BinaryRealTypeMath$Multiply(\n\t\tRealType out,\n\t\tRealType in1,\n\t\tRealType in2)\n\t(IterableInterval out?) =\n\tnet.imagej.ops.math.ConstantToIIOutputII$Multiply(\n\t\tIterableInterval out?,\n\t\tIterableInterval in,\n\t\tNumericType value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyByte(\n\t\tPlanarImg arg,\n\t\tbyte value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyDouble(\n\t\tPlanarImg arg,\n\t\tdouble value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyFloat(\n\t\tPlanarImg arg,\n\t\tfloat value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyInt(\n\t\tPlanarImg arg,\n\t\tint value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyLong(\n\t\tPlanarImg arg,\n\t\tlong value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyShort(\n\t\tPlanarImg arg,\n\t\tshort value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyUnsignedByte(\n\t\tPlanarImg arg,\n\t\tbyte value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyUnsignedInt(\n\t\tPlanarImg arg,\n\t\tint value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyUnsignedLong(\n\t\tPlanarImg arg,\n\t\tlong value)\n\t(PlanarImg arg) =\n\tnet.imagej.ops.math.ConstantToPlanarImage$MultiplyUnsignedShort(\n\t\tPlanarImg arg,\n\t\tshort value)\n\t(IterableInterval out?) =\n\tnet.imagej.ops.math.IIToRAIOutputII$Multiply(\n\t\tIterableInterval out?,\n\t\tIterableInterval in1,\n\t\tRandomAccessibleInterval in2)\n\t(RandomAccessibleInterval out) =\n\tnet.imagej.ops.math.ConstantToIIOutputRAI$Multiply(\n\t\tRandomAccessibleInterval out,\n\t\tIterableInterval in,\n"
                        },
                        {
                            "type": "err",
                            "value": "\t\tNumericType value)\n[INFO] -------- Add two numbers --------\n[INFO] What is 2 + 5? 7\n[INFO] -------- Create a new blank image --------\n[INFO] -------- Fill in an image with a formula --------\n[INFO] -------- Add a constant value to an image --------\n[INFO] -------- Generate gradient image using a formula --------\n[INFO] -------- Add two images --------\n[INFO] -------- Dump an image to the console --------\n[INFO] Composite image:\n                    .....          .......................,,,,,,,,,,,,,,,,,,,,,,,----------,,,,,---------+++-----------+++++++++++++++++++++++oooooooo\n                   .........      .......................,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++--------+++++++++++++++++++++++ooooooooo\n                  .......................,,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++oooooooooo\n                 .......................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooo\n                .......................,,,,,,,,,,.....,,,,,,,,,---,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooo\n                .......................,,,,,,,,,,,,.,,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***\n               .......................,,,,,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo****\n               .......................,,,,,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo****\n                .......................,,,,,,,,,,,,..,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***\n                .......................,,,,,,,,,,.....,,,,,,,,,---,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooo\n                 .......................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooo\n                 .......................,,,,,,,........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++-++++++++++ooooo++++++++++oooooooooo\n                  ............ ..........,,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++oooooooooo\n                  ...........    .........,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++------++++++++++++++++++++++++ooooooooo\n                  ..........     .........,,,............,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++-------+++++++++++++++++++++++ooooooooo\n                  ..........     .........,,,............,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++-------+++++++++++++++++++++++ooooooooo\n                  ...........    .........,,,...........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++------++++++++++++++++++++++++ooooooooo\n                 ........................,,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++oooooooooo\n                 .......................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooo\n                .......................,,,,,,,,,,,....,,,,,,,,,---,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooo\n               .......................,,,,,,,,,,,,,,,,,,,,,,,-------,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooooooooooooooooo****\n.....         .......................,,,,,,,,,,,,,,,,,,,,,,,-----------,,,,---------+++-----------+++++++++++++++++++++++ooooooooooooooooooooooo******\n.......      .......................,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo*******\n....................,,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++----+++++++++ooo+++++++++++ooooooooooooooooooooooo********\n...................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo*********\n..................,,,,,,,,,,,....,,,,,,,,,---,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooooooooooooooo*********\n..................,,,,,,,,,,,,.,,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***ooooooooooo**********\n.................,,,,,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo****ooooooooooo**********\n.................,,,,,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo****ooooooooooo**********\n..................,,,,,,,,,,,,..,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***ooooooooooo**********\n..................,,,,,,,,,,.....,,,,,,,,,---,,,,,,,,,,,,----------------------+++++++++++++++++++++++ooooooooo+++++++ooooooooooooooooooooooo*********\n...................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo*********\n...................,,,,,,,........,,,,,,,,,,,,,,,,,,,,,,,,----------------------+++++++++++++-++++++++++ooooo++++++++++ooooooooooooooooooooooo********\n......... ..........,,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++ooooooooooooooooooooooo********\n........    .........,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----++++++++++++++++++++++++ooooooooooooooooooooooo*******\n.......     .........,,,............,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo*******\n.......     .........,,,............,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo*******\n........    .........,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----++++++++++++++++++++++++ooooooooooooooooooooooo*******\n....................,,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++----+++++++++ooo+++++++++++ooooooooooooooooooooooo********\n...................,,,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo*********\n..................,,,,,,,,,,,....,,,,,,,,,----,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooooooooooooooo*********\n.................,,,,,,,,,,,,,,,,,,,,,,,--------,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooooooooooooooo******oooooooooo**********\n................,,,,,,,,,,,,,,,,,,,,,,,-----------,,,,---------++++----------+++++++++++++++++++++++ooooooooooooooooooooooo*********oooooo************\n...............,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOO\n,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++---+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOO\n,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOO\n,,,,,,,,....,,,,,,,,,---,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooo++++++oooooooooooooooooooooooo***********************OOOOOOO\n,,,,,,,,,.,,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***ooooooooooo***********************OOOOOOOO\n,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo*****oooooooooo***********************OOOOOOOO\n,,,,,,,,,,,,,,,,,,,,------,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo****ooooooooooo***********************OOOOOOOO\n,,,,,,,,,..,,,,,,,,,-----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***ooooooooooo***********************OOOOOOOO\n,,,,,,,.....,,,,,,,,,---,,,,,,,,,,,,----------------------+++++++++++++++++++++++ooooooooo+++++++ooooooooooooooooooooooo***********************OOOOOOO\n,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOO\n,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,----------------------+++++++++++++-++++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOO\n"
                        },
                        {
                            "type": "err",
                            "value": ",,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++ooooooooooooooooooooooo***********************OOOOOO\n,,,,...........,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----++++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOO\n,,,............,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOO\n,,,............,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOO\n,,,,..........,,,,,,,,,,,,,,,,,,,,,,,-----------------------++++++++++-----++++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOO\n,,,,,.........,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++---+++++++++oooo+++++++++++ooooooooooooooooooooooo***********************OOOOOO\n,,,,,,.......,,,,,,,,,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOO\n,,,,,,,,....,,,,,,,,,----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++oooooooooooooooooooooooo**********************OOOOOOOO\n,,,,,,,,,,,,,,,,,,,--------,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooooooooooooooo*******ooooooooo***********************OOOOOOOO\n,,,,,,,,,,,,,,,,,,-----------,,,---------+++++----------+++++++++++++++++++++++ooooooooooooooooooooooo**********ooooo**********O*************OOOOOOOOO\n,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOO\n,,,,,,,,,,,,,,,,-----------------------+++++++++++---+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOOOOOO*****OOOOOOOOOO#O\n,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOOO####\n----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++oooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#####\n-----,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***ooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO######\n-----,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo+++ooooooooo*****oooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO######\n-----,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooo++++ooooooooo***ooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO######\n----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***oooooooooooo**********************OOOOOOOOOOOOOOOOOOOOOOO######\n---,,,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooo+++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#####\n,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOO*OOOOOOOOOO####\n,,,,,,,,,,,,,,,,-----------------------++++++++++++--+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOOOOOO*****OOOOOOOOO###\n,,,,,,,,,,,,,,,,-----------------------++++++++++-----+++++++++ooo+++++++++++ooooooooooooooooooooooo***********************OOOOOOOOO******OOOOOOOOOOOO\n,,,,,,,,,,,,,,,,-----------------------++++++++++------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOO\n,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOO\n,,,,,,,,,,,,,,,,,-----------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOO\n,,,,,,,,,,,,,,,,-----------------------++++++++++-----++++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOOO*******OOOOOOOOOOO\n,,,,,,,,,,,,,,,,-----------------------+++++++++++---+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOOOOOO*****OOOOOOOOOOOO\n,,,,,,,,,,,,,,,-----------------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOO***OOOOOOOOO####\n----,,,,,,,,,,-----------------------+++++++++++++++++++++++oooooooooo+++++oooooooooo*ooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#####\n------,,,,,,,-----------------------+++++++++++++++++++++++ooooooooooooooooooooooo*******ooooooooo***********************OOOOOOOOOOOOOOOOOOOOOO#######\n--------,,,---------+++++----------+++++++++++++++++++++++ooooooooooooooooooooooo**********ooooo**********O*************OOOOOOOOOOOOOOOOOOOOOO########\n-------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOOOOOOOOOOOOOO#########\n------------------+++++++++++---+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOOOOOO*****OOOOOOOOOO#OOOOOOOOOOOO##########\n-----------------+++++++++++++++++++++++oooooooo+++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOOO#####OOOOOOOOOO##########\n----------------+++++++++++++++++++++++oooooooooo+++++oooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO########OOOOOOO###########\n----------------+++++++++++++++++++++++ooooooooooo++++ooooooooo***ooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#########OOOOOO############\n----------------+++++++++++++++++++++++ooooooooooo+++ooooooooo*****oooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO##########OOOOO############\n----------------+++++++++++++++++++++++ooooooooooo++++ooooooooo***ooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#########OOOOOO############\n----------------+++++++++++++++++++++++oooooooooo+++++ooooooooo***oooooooooooo**********************OOOOOOOOOOOOOOOOOOOOOOO#########OOOOOOO###########\n-----------------+++++++++++++++++++++++oooooooo+++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOOOOOOOOOOOO#######OOOOOOOO###########\n-----------------+++++++++++++++++++++++ooooooo++++++++ooooooooooooooooooooooo***********************OOOOOOOOOOOOO*OOOOOOOOOO#####OOOOOOOOOO##########\n------------------++++++++++++--+++++++++ooooo++++++++++ooooooooooooooooooooooo***********************OOOOOOOOOO*****OOOOOOOOO###OOOOOOOOOOO##########\n------------------++++++++++-----+++++++++ooo++++++++++++oooooooooooooooooooooo***********************OOOOOOOOO*******OOOOOOOOOOOOOOOOOOOOOOO#########\n-------------------+++++++++------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOOOOOOOOOOOOOO#########\n-------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOOOOOOOOOOOOOO#########\n-------------------++++++++-------+++++++++++++++++++++++ooooooooooooooooooooooo***********************OOOOOOO********OOOOOOOOOOOOOOOOOOOOOOO#########\n"
                        },
                        {
                            "type": "err",
                            "value": "[INFO] -------- Show the image in a window --------\n[INFO] No UI available!\n[INFO] -------- Execute op on every pixel of an image --------\n[INFO] -------- All done! --------\n"
                        }
                    ]
                },
                "selectedType": "Results",
                "pluginName": "Groovy",
                "shellId": "f59451a4-0583-4653-a649-16a56e5ddc19",
                "elapsedTime": 2701,
                "height": 4567
            },
            "evaluatorReader": true,
            "lineCount": 54
        }
    ],
    "namespace": {}
}
